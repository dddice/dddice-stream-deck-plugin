# @format
#
# Release to various browser extension stores

name: 'Release'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true
        type: string
      force:
        description: 'Force Release'
        default: false
        type: boolean

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.tag }}

    steps:
      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history for git-cliff

      - name: Update Version
        run: |
          npm --no-git-tag-version --allow-same-version version $VERSION
          MANIFEST=$(cat static/manifest.json | jq ".Version |= \"${VERSION/v/}\"")
          echo "$MANIFEST" > static/manifest.json

      - name: Commit
        run: |
          git add .
          git config user.email "developers@dddice.com"
          git config user.name "dddice"
          git commit -m "release: ${{ github.event.inputs.tag }}-${{ github.run_number }}" || echo 'ok'
          git push

      - name: Tag
        if: inputs.force == false
        run: |
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Tag (Force)
        if: inputs.force
        run: |
          git tag -f ${{ github.event.inputs.tag }}
          git push -f origin ${{ github.event.inputs.tag }}

      - name: Build Release
        run: |
          npm ci
          npm run build

      - name: Zip Release
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r com.dddice.app.streamDeckPlugin com.dddice.app.sdPlugin

      - name: Generate Changelog
        id: git-cliff
        uses: orhun/git-cliff-action@v1
        with:
          config: cliff.toml
          args: --current --date-order --strip all
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          echo "RELEASE_BODY<<EOF" >>$GITHUB_OUTPUT
          echo "$r" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'com.dddice.app.streamDeckPlugin'
          tag: ${{ github.event.inputs.tag }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}
